# Build stage
FROM rust:latest as builder

# Install dependencies for building
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy Cargo files first for better caching
COPY backend/Cargo.toml backend/Cargo.lock ./

# Create a dummy src/main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this will be cached)
RUN cargo build --release && rm -f target/release/deps/backend*

# Copy the source code
COPY backend/src ./src

# Build the application
RUN cargo build --release

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    chromium \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -u 1000 -m -d /app -s /bin/bash app

WORKDIR /app

# Copy the built application
COPY --from=builder /app/target/release/backend ./backend

# Copy database scripts
COPY backend/src/scripts ./scripts

# Make scripts executable
RUN chmod +x ./scripts/*.sh

# Change ownership
RUN chown -R app:app /app

USER app

EXPOSE 8080

CMD ["./backend"]