services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ffball
      POSTGRES_USER: ffball
      POSTGRES_PASSWORD: ffball
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/scripts:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ffball -d ffball"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ffball-backend:latest
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./backend/src/scripts:/app/scripts:ro

  frontend:
    image: ffball-frontend:latest
    # No healthcheck needed - container just provides static files
    # No depends_on needed - frontend doesn't depend on backend

  # Nginx to serve frontend and proxy to backend
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/ffball.conf:/etc/nginx/nginx.conf:ro
      - frontend:/var/www/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cron job for data updates
  cron:
    image: alpine:latest
    command: >
      sh -c "
        apk add --no-cache curl &&
        echo '0 0 * * * curl -X POST http://backend:8080/fantasy-data/update' | crontab - &&
        crond -f -L /dev/stdout
      "
    depends_on:
      - backend

volumes:
  postgres_data:
  frontend:
